---
import BaseLayout from '../layouts/BaseLayout.astro';
import OnboardingWizard from '../components/onboarding/OnboardingWizard';

// Check if user is authenticated (simple client-side check)
// In production, this should be done with proper middleware
---

<BaseLayout title="Onboarding - CC Wrapper">
  <main class="onboarding-page">
    <div class="onboarding-container">
      <header class="onboarding-header">
        <h1>Welcome to CC Wrapper</h1>
        <p>Let's set up your workspace and get you started</p>
      </header>

      <div id="authCheck">
        <p>Checking authentication...</p>
      </div>

      <div id="onboardingContent" style="display: none;">
        <OnboardingWizard client:load />
      </div>

      <div id="loginPrompt" style="display: none;">
        <p>You need to be logged in to complete onboarding.</p>
        <a href="/login" class="login-link">Go to Login</a>
      </div>
    </div>
  </main>
</BaseLayout>

<script>
  // Remove any tour elements that might be injected
  document.addEventListener('DOMContentLoaded', () => {
    const removeTourElements = () => {
      const tourElements = document.querySelectorAll('.tour-overlay, .tour-spotlight, .tour-tooltip-container, [class*="tour"]');
      tourElements.forEach(el => {
        el.remove();
      });
    };

    // Remove immediately
    removeTourElements();

    // Also remove periodically in case elements are added dynamically
    setInterval(removeTourElements, 100);
  });
</script>

<script>
  // Check authentication on page load
  document.addEventListener('DOMContentLoaded', () => {
    const token = localStorage.getItem('auth_token');
    const authCheck = document.getElementById('authCheck');
    const onboardingContent = document.getElementById('onboardingContent');
    const loginPrompt = document.getElementById('loginPrompt');

    if (!authCheck || !onboardingContent || !loginPrompt) {
      return;
    }

    if (token) {
      // Verify token is valid by making a simple API call
      fetch('http://localhost:20001/api/auth/me', {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      })
      .then(response => {
        if (response.ok) {
          // Token is valid, show onboarding
          authCheck.style.display = 'none';
          onboardingContent.style.display = 'block';
        } else {
          // Token is invalid, show login prompt
          authCheck.style.display = 'none';
          loginPrompt.style.display = 'block';
        }
      })
      .catch(() => {
        // Error checking token, show login prompt
        authCheck.style.display = 'none';
        loginPrompt.style.display = 'block';
      });
    } else {
      // No token, show login prompt
      authCheck.style.display = 'none';
      loginPrompt.style.display = 'block';
    }
  });
</script>

<style>
  /* Reset any inherited positioning */
  html, body {
    height: 100%;
    margin: 0;
    padding: 0;
    overflow-x: hidden;
  }

  .onboarding-page {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    padding: 2rem;
    z-index: 9999;
  }

  .onboarding-container {
    max-width: 800px;
    width: 100%;
    background: white;
    border-radius: 12px;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
    padding: 1.5rem;
    margin: 0 auto;
    text-align: center;
  }

  .onboarding-header {
    text-align: center;
    margin-bottom: 1rem;
    margin-top: 0;
  }

  .onboarding-header h1 {
    font-size: 2.5rem;
    color: #333;
    margin-bottom: 0.5rem;
  }

  .onboarding-header p {
    font-size: 1.125rem;
    color: #666;
  }

  .login-link {
    display: inline-block;
    margin-top: 1rem;
    padding: 0.75rem 1.5rem;
    background: #667eea;
    color: white;
    text-decoration: none;
    border-radius: 6px;
    font-weight: 500;
    transition: background-color 0.2s;
  }

  .login-link:hover {
    background: #5a67d8;
  }

  #authCheck, #loginPrompt {
    text-align: center;
    padding: 2rem;
  }

  #loginPrompt p {
    margin-bottom: 1rem;
    color: #666;
  }

  /* Fix onboarding wizard positioning */
  .onboarding-content {
    min-height: 400px;
    margin-bottom: 2rem;
    position: relative;
    z-index: 10000;
  }

  /* Fix tour tooltip positioning */
  .tour-tooltip-container {
    position: fixed !important;
    z-index: 10001 !important;
    max-width: 350px;
    left: 50% !important;
    top: 50% !important;
    transform: translate(-50%, -50%) !important;
  }

  /* Force tour overlay to be on top */
  .tour-overlay {
    z-index: 99999 !important;
  }

  .tour-tooltip {
    position: relative !important;
    background: white;
    border-radius: 12px;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
    padding: 1.5rem;
    border: 2px solid #667eea;
  }

  /* Fix wizard steps visibility */
  .wizard-step {
    display: block !important;
    position: relative !important;
    opacity: 1 !important;
    visibility: visible !important;
  }

  /* Force onboarding wizard to be visible and centered */
  .onboarding-wizard {
    display: block !important;
    position: relative !important;
    width: 100%;
    max-width: 600px;
    margin: 0 auto;
  }

  /* Fix step content positioning */
  .onboarding-content > * {
    display: block !important;
    position: relative !important;
    opacity: 1 !important;
    visibility: visible !important;
    min-height: 200px;
  }

  /* Ensure step containers are visible */
  .user-type-step,
  .ai-tools-step,
  .workspace-config-step {
    display: block !important;
    position: relative !important;
    opacity: 1 !important;
    visibility: visible !important;
  }

  /* Disable tour elements during onboarding */
  .tour-overlay,
  .tour-spotlight,
  .tour-tooltip-container {
    display: none !important;
    visibility: hidden !important;
    opacity: 0 !important;
    position: fixed !important;
    top: -9999px !important;
    left: -9999px !important;
  }

  /* Force any remaining tour tooltips to be hidden */
  .tour-tooltip-container[style*="position: absolute"] {
    display: none !important;
    top: -9999px !important;
    left: -9999px !important;
    z-index: -1 !important;
  }
</style>
