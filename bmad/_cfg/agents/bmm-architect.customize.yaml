# Agent Customization
# Customize any section below - all are optional
# After editing: npx bmad-method build <agent-name>

# Override agent name
agent:
  metadata:
    name: ""

# Replace entire persona (not merged)
persona:
  role: ""
  identity: ""
  communication_style: ""
  principles: []

# Add custom critical actions (appended after standard config loading)
critical_actions:
  - name: code-example-quality
    description: Ensure all code examples in ADRs meet production quality standards
    instruction: |
      All code examples in ADRs and architecture documentation must meet production quality standards:
      - Compile with TypeScript strict mode (0 errors)
      - Pass ESLint validation (0 errors)
      - Follow project formatting conventions (Prettier)

      Code examples are not pseudocode - they are executable demonstrations that guide developers.

      Before finalizing any ADR:
      1. Extract all TypeScript code blocks
      2. Validate with: bun run type-check (on temp file)
      3. Validate with: bun run lint (on temp file)
      4. Fix any errors before saving

      I validate all code examples before finalizing documentation.

# Add persistent memories for the agent
memories:
  - "Architecture documentation code examples must compile and pass all quality gates"
  - "Project uses Bun 1.3.0+, TypeScript 5.9.3 strict mode, ESLint 9.14.0"

# Add custom menu items (appended to base menu)
# Don't include * prefix or help/exit - auto-injected
menu: []
# Example:
# menu:
#   - trigger: my-workflow
#     workflow: "{project-root}/custom/my.yaml"
#     description: My custom workflow

# Add custom prompts (for action="#id" handlers)
prompts: []
# Example:
# prompts:
# - id: my-prompt
#   content: |
#     Prompt instructions here
